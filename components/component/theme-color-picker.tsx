/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/EcYtxLbkYqn
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import { Label } from "@/components/ui/label"
import { Slider } from "@/components/ui/slider"
import { Input } from "@/components/ui/input"

export function ThemeColorPicker() {
  const [color, setColor] = useState({ r: 255, g: 255, b: 255, a: 100 })
  const handleColorChange = (type, value) => {
    setColor((prevColor) => ({
      ...prevColor,
      [type]: value,
    }))
  }
  return (
    <div className="bg-background rounded-lg border p-6 w-full max-w-md">
      <div className="flex flex-col items-center gap-6">
        <div
          className="w-32 h-32 rounded-full border-2 border-muted"
          style={{ backgroundColor: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a / 100})` }}
        />
        <div className="grid w-full gap-4">
          <div className="grid grid-cols-[1fr_200px] items-center gap-4">
            <Label htmlFor="red">Red</Label>
            <Slider id="red" value={[color.r]} max={255} onValueChange={(value) => handleColorChange("r", value)} />
          </div>
          <div className="grid grid-cols-[1fr_200px] items-center gap-4">
            <Label htmlFor="green">Green</Label>
            <Slider id="green" value={[color.g]} max={255} onValueChange={(value) => handleColorChange("g", value)} />
          </div>
          <div className="grid grid-cols-[1fr_200px] items-center gap-4">
            <Label htmlFor="blue">Blue</Label>
            <Slider id="blue" value={[color.b]} max={255} onValueChange={(value) => handleColorChange("b", value)} />
          </div>
          <div className="grid grid-cols-[1fr_200px] items-center gap-4">
            <Label htmlFor="alpha">Alpha</Label>
            <Slider id="alpha" value={[color.a]} max={100} onValueChange={(value) => handleColorChange("a", value)} />
          </div>
          <div className="grid grid-cols-[1fr_200px] items-center gap-4">
            <Label htmlFor="rgba">RGBA</Label>
            <Input
              id="rgba"
              value={`rgba(${color.r}, ${color.g}, ${color.b}, ${color.a / 100})`}
              readOnly
              className="bg-muted"
            />
          </div>
        </div>
      </div>
    </div>
  )
}
